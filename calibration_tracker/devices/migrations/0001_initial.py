# Generated by Django 5.2 on 2025-05-01 18:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('device_type', models.CharField(max_length=255, verbose_name='Тип средства измерения')),
                ('serial_number', models.CharField(max_length=255, verbose_name='Заводской номер')),
                ('measure_type', models.CharField(choices=[('pressure', 'Давление'), ('thermal', 'Теплотехнические величины'), ('electrical', 'Электрические величины'), ('linear_and_angular_dimensions', 'Линейные и угловые размеры'), ('mechanical', 'Механические величины'), ('flow', 'Расход'), ('other', 'Другое')], max_length=255, verbose_name='Вид измерений')),
                ('measure_range', models.CharField(blank=True, max_length=255, null=True, verbose_name='Диапазон измерений')),
                ('measurement_unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='Единица измерения')),
                ('accuracy_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='Класс точности')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Местоположение')),
                ('last_calibration_date', models.DateField(blank=True, null=True, verbose_name='Дата поверки')),
                ('next_calibration_date', models.DateField(blank=True, null=True, verbose_name='Дата следующей поверки')),
                ('calibration_interval', models.IntegerField(blank=True, null=True, verbose_name='Периодичность поверки')),
                ('status', models.CharField(choices=[('valid', 'Действующий'), ('overdue', 'Просрочен'), ('storage', 'Хранение'), ('calibration', 'В поверке'), ('calibration_done', 'Поверено'), ('rejected', 'Не пригодно к применению')], default='active', max_length=255, verbose_name='Статус')),
                ('certificate_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер свидетельства')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/', verbose_name='Свидетельство')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('owner_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.department')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
            ],
        ),
    ]
